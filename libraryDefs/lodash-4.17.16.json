{
  "version": "4.17.16",
  "functions": [
    {
      "name": "chunk",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "size",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T[][]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "compact",
      "parameters": [
        {
          "name": "array",
          "type": "List<T | Falsey> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "concat",
      "parameters": [
        {
          "name": "values",
          "type": "Array<Many<T>>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "difference",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "values",
          "type": "Array<List<T>>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "differenceBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T1 | T2>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "differenceBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values1",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "values2",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T1 | T2 | T3>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "differenceBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values1",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "values2",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "values3",
          "type": "List<T4>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T1 | T2 | T3 | T4>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "differenceBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values1",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "values2",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "values3",
          "type": "List<T4>",
          "optional": false
        },
        {
          "name": "values4",
          "type": "List<T5>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T1 | T2 | T3 | T4 | T5>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "differenceBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values1",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "values2",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "values3",
          "type": "List<T4>",
          "optional": false
        },
        {
          "name": "values4",
          "type": "List<T5>",
          "optional": false
        },
        {
          "name": "values5",
          "type": "List<T6>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T1 | T2 | T3 | T4 | T5 | T6>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "differenceBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values1",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "values2",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "values3",
          "type": "List<T4>",
          "optional": false
        },
        {
          "name": "values4",
          "type": "List<T5>",
          "optional": false
        },
        {
          "name": "values5",
          "type": "List<T6>",
          "optional": false
        },
        {
          "name": "values",
          "type": "Array<List<T7> | ValueIteratee<T1 | T2 | T3 | T4 | T5 | T6 | T7>>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "differenceBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "values",
          "type": "Array<List<T>>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "differenceWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Comparator2<T1, T2>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "differenceWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values1",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "values2",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Comparator2<T1, T2 | T3>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "differenceWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values1",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "values2",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "values",
          "type": "Array<List<T4> | Comparator2<T1, T2 | T3 | T4>>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "differenceWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "values",
          "type": "Array<List<T>>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "drop",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "n",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "dropRight",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "n",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "dropRightWhile",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "dropWhile",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "fill",
      "parameters": [
        {
          "name": "array",
          "type": "any[] | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "fill",
      "parameters": [
        {
          "name": "array",
          "type": "List<any> | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "List<T>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "fill",
      "parameters": [
        {
          "name": "array",
          "type": "U[] | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        },
        {
          "name": "start",
          "type": "number",
          "optional": true
        },
        {
          "name": "end",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "Array<T | U>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "fill",
      "parameters": [
        {
          "name": "array",
          "type": "List<U> | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        },
        {
          "name": "start",
          "type": "number",
          "optional": true
        },
        {
          "name": "end",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "List<T | U>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "findIndex",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIterateeCustom<T, boolean>",
          "optional": true
        },
        {
          "name": "fromIndex",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "findLastIndex",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIterateeCustom<T, boolean>",
          "optional": true
        },
        {
          "name": "fromIndex",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatten",
      "parameters": [
        {
          "name": "array",
          "type": "List<Many<T>> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "flattenDeep",
      "parameters": [
        {
          "name": "array",
          "type": "ListOfRecursiveArraysOrValues<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "Array<Flat<T>>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flattenDepth",
      "parameters": [
        {
          "name": "array",
          "type": "ListOfRecursiveArraysOrValues<T> | null | undefined",
          "optional": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "fromPairs",
      "parameters": [
        {
          "name": "pairs",
          "type": "List<[PropertyName, T]> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "Dictionary<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "fromPairs",
      "parameters": [
        {
          "name": "pairs",
          "type": "List<any[]> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "Dictionary<any>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "head",
      "parameters": [
        {
          "name": "array",
          "type": "readonly [T, ...unknown[]]",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "head",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "indexOf",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        },
        {
          "name": "fromIndex",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "initial",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "intersection",
      "parameters": [
        {
          "name": "arrays",
          "type": "Array<List<T> | null | undefined>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "intersectionBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T1 | T2>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "intersectionBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null",
          "optional": false
        },
        {
          "name": "values1",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "values2",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T1 | T2 | T3>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "intersectionBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values1",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "values2",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "values",
          "type": "Array<List<T4> | ValueIteratee<T1 | T2 | T3 | T4>>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "intersectionBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null",
          "optional": true
        },
        {
          "name": "values",
          "type": "Array<List<T>>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "intersectionBy",
      "parameters": [
        {
          "name": "values",
          "type": "Array<List<T> | ValueIteratee<T>>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "intersectionWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Comparator2<T1, T2>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "intersectionWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values1",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "values2",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Comparator2<T1, T2 | T3>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "intersectionWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1> | null | undefined",
          "optional": false
        },
        {
          "name": "values1",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "values2",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "values",
          "type": "Array<List<T4> | Comparator2<T1, T2 | T3 | T4>>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "intersectionWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null",
          "optional": true
        },
        {
          "name": "values",
          "type": "Array<List<T> | Comparator2<T, never>>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "join",
      "parameters": [
        {
          "name": "array",
          "type": "List<any> | null | undefined",
          "optional": false
        },
        {
          "name": "separator",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "last",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "lastIndexOf",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        },
        {
          "name": "fromIndex",
          "type": "true|number",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "nth",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "n",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "pull",
      "parameters": [
        {
          "name": "array",
          "type": "T[]",
          "optional": false
        },
        {
          "name": "values",
          "type": "T[]",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "pull",
      "parameters": [
        {
          "name": "array",
          "type": "List<T>",
          "optional": false
        },
        {
          "name": "values",
          "type": "T[]",
          "optional": false
        }
      ],
      "returnType": "List<T>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "pullAll",
      "parameters": [
        {
          "name": "array",
          "type": "T[]",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pullAll",
      "parameters": [
        {
          "name": "array",
          "type": "List<T>",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T>",
          "optional": true
        }
      ],
      "returnType": "List<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pullAllBy",
      "parameters": [
        {
          "name": "array",
          "type": "T[]",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T>",
          "optional": true
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pullAllBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T>",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T>",
          "optional": true
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "List<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pullAllBy",
      "parameters": [
        {
          "name": "array",
          "type": "T1[]",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T1 | T2>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pullAllBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1>",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T1 | T2>",
          "optional": false
        }
      ],
      "returnType": "List<T1>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pullAllWith",
      "parameters": [
        {
          "name": "array",
          "type": "T[]",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T>",
          "optional": true
        },
        {
          "name": "comparator",
          "type": "Comparator<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pullAllWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<T>",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T>",
          "optional": true
        },
        {
          "name": "comparator",
          "type": "Comparator<T>",
          "optional": true
        }
      ],
      "returnType": "List<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pullAllWith",
      "parameters": [
        {
          "name": "array",
          "type": "T1[]",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Comparator2<T1, T2>",
          "optional": false
        }
      ],
      "returnType": "T1[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pullAllWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<T1>",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Comparator2<T1, T2>",
          "optional": false
        }
      ],
      "returnType": "List<T1>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pullAt",
      "parameters": [
        {
          "name": "array",
          "type": "T[]",
          "optional": false
        },
        {
          "name": "indexes",
          "type": "Array<Many<number>>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pullAt",
      "parameters": [
        {
          "name": "array",
          "type": "List<T>",
          "optional": false
        },
        {
          "name": "indexes",
          "type": "Array<Many<number>>",
          "optional": false
        }
      ],
      "returnType": "List<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "remove",
      "parameters": [
        {
          "name": "array",
          "type": "List<T>",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "reverse",
      "parameters": [
        {
          "name": "array",
          "type": "TList",
          "optional": false
        }
      ],
      "returnType": "TList",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "slice",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "start",
          "type": "number",
          "optional": true
        },
        {
          "name": "end",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "sortedIndex",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "sortedIndex",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "sortedIndexBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "sortedIndexOf",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "sortedLastIndex",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "sortedLastIndexBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "sortedLastIndexOf",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "sortedUniq",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "sortedUniqBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "tail",
      "parameters": [
        {
          "name": "array",
          "type": "readonly [unknown, ...T]",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "tail",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "take",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "n",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "takeRight",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "n",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "takeRightWhile",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "takeWhile",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "union",
      "parameters": [
        {
          "name": "arrays",
          "type": "Array<List<T> | null | undefined>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "unionBy",
      "parameters": [
        {
          "name": "arrays",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "unionBy",
      "parameters": [
        {
          "name": "arrays1",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "unionBy",
      "parameters": [
        {
          "name": "arrays1",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays3",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "unionBy",
      "parameters": [
        {
          "name": "arrays1",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays3",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays4",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "unionBy",
      "parameters": [
        {
          "name": "arrays1",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays3",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays4",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays5",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "Array<ValueIteratee<T> | List<T> | null | undefined>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "unionWith",
      "parameters": [
        {
          "name": "arrays",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Comparator<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "unionWith",
      "parameters": [
        {
          "name": "arrays",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Comparator<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "unionWith",
      "parameters": [
        {
          "name": "arrays",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays3",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Array<Comparator<T> | List<T> | null | undefined>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "uniq",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "uniqBy",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "uniqWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Comparator<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "unzip",
      "parameters": [
        {
          "name": "array",
          "type": "T[][] | List<List<T>> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[][]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "unzipWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<List<T>> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "(...values: T[]) => TResult",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "unzipWith",
      "parameters": [
        {
          "name": "array",
          "type": "List<List<T>> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[][]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "without",
      "parameters": [
        {
          "name": "array",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "values",
          "type": "T[]",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "xor",
      "parameters": [
        {
          "name": "arrays",
          "type": "Array<List<T> | null | undefined>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "xorBy",
      "parameters": [
        {
          "name": "arrays",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "xorBy",
      "parameters": [
        {
          "name": "arrays",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "xorBy",
      "parameters": [
        {
          "name": "arrays",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays3",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "Array<ValueIteratee<T> | List<T> | null | undefined>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "xorWith",
      "parameters": [
        {
          "name": "arrays",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Comparator<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "xorWith",
      "parameters": [
        {
          "name": "arrays",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Comparator<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "xorWith",
      "parameters": [
        {
          "name": "arrays",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "arrays3",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "comparator",
          "type": "Array<Comparator<T> | List<T> | null | undefined>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "zip",
      "parameters": [
        {
          "name": "arrays1",
          "type": "List<T1>",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T2>",
          "optional": false
        }
      ],
      "returnType": "Array<[T1 | undefined, T2 | undefined]>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "zip",
      "parameters": [
        {
          "name": "arrays1",
          "type": "List<T1>",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "arrays3",
          "type": "List<T3>",
          "optional": false
        }
      ],
      "returnType": "Array<[T1 | undefined, T2 | undefined, T3 | undefined]>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "zip",
      "parameters": [
        {
          "name": "arrays1",
          "type": "List<T1>",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "arrays3",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "arrays4",
          "type": "List<T4>",
          "optional": false
        }
      ],
      "returnType": "Array<[T1 | undefined, T2 | undefined, T3 | undefined, T4 | undefined]>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "zip",
      "parameters": [
        {
          "name": "arrays1",
          "type": "List<T1>",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "arrays3",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "arrays4",
          "type": "List<T4>",
          "optional": false
        },
        {
          "name": "arrays5",
          "type": "List<T5>",
          "optional": false
        }
      ],
      "returnType": "Array<[T1 | undefined, T2 | undefined, T3 | undefined, T4 | undefined, T5 | undefined]>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "zip",
      "parameters": [
        {
          "name": "arrays",
          "type": "Array<List<T> | null | undefined>",
          "optional": false
        }
      ],
      "returnType": "Array<Array<T | undefined>>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "zipObject",
      "parameters": [
        {
          "name": "props",
          "type": "List<PropertyName>",
          "optional": false
        },
        {
          "name": "values",
          "type": "List<T>",
          "optional": false
        }
      ],
      "returnType": "Dictionary<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "zipObject",
      "parameters": [
        {
          "name": "props",
          "type": "List<PropertyName>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<undefined>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "zipObjectDeep",
      "parameters": [
        {
          "name": "paths",
          "type": "List<PropertyPath>",
          "optional": true
        },
        {
          "name": "values",
          "type": "List<any>",
          "optional": true
        }
      ],
      "returnType": "object",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "zipWith",
      "parameters": [
        {
          "name": "arrays",
          "type": "List<T>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "(value1: T) => TResult",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "zipWith",
      "parameters": [
        {
          "name": "arrays1",
          "type": "List<T1>",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "(value1: T1, value2: T2) => TResult",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "zipWith",
      "parameters": [
        {
          "name": "arrays1",
          "type": "List<T1>",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "arrays3",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "(value1: T1, value2: T2, value3: T3) => TResult",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "zipWith",
      "parameters": [
        {
          "name": "arrays1",
          "type": "List<T1>",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "arrays3",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "arrays4",
          "type": "List<T4>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "(value1: T1, value2: T2, value3: T3, value4: T4) => TResult",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "zipWith",
      "parameters": [
        {
          "name": "arrays1",
          "type": "List<T1>",
          "optional": false
        },
        {
          "name": "arrays2",
          "type": "List<T2>",
          "optional": false
        },
        {
          "name": "arrays3",
          "type": "List<T3>",
          "optional": false
        },
        {
          "name": "arrays4",
          "type": "List<T4>",
          "optional": false
        },
        {
          "name": "arrays5",
          "type": "List<T5>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "(value1: T1, value2: T2, value3: T3, value4: T4, value5: T5) => TResult",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "zipWith",
      "parameters": [
        {
          "name": "iteratee",
          "type": "Array<((...group: T[]) => TResult) | List<T> | null | undefined>",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "countBy",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<number>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "countBy",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T[keyof T]>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<number>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "every",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIterateeCustom<T, boolean>",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "every",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ObjectIterateeCustom<T, boolean>",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "filter",
      "parameters": [
        {
          "name": "collection",
          "type": "string | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "StringIterator<boolean>",
          "optional": true
        }
      ],
      "returnType": "string[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "filter",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIteratorTypeGuard<T, S>",
          "optional": false
        }
      ],
      "returnType": "S[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "filter",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIterateeCustom<T, boolean>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "filter",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ObjectIteratorTypeGuard<T, S>",
          "optional": false
        }
      ],
      "returnType": "S[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "filter",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ObjectIterateeCustom<T, boolean>",
          "optional": true
        }
      ],
      "returnType": "Array<T[keyof T]>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "find",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIteratorTypeGuard<T, S>",
          "optional": false
        },
        {
          "name": "fromIndex",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "S|undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "find",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIterateeCustom<T, boolean>",
          "optional": true
        },
        {
          "name": "fromIndex",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T|undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "find",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ObjectIteratorTypeGuard<T, S>",
          "optional": false
        },
        {
          "name": "fromIndex",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "S|undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "find",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ObjectIterateeCustom<T, boolean>",
          "optional": true
        },
        {
          "name": "fromIndex",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T[keyof T]|undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "findLast",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIteratorTypeGuard<T, S>",
          "optional": false
        },
        {
          "name": "fromIndex",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "S|undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "findLast",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIterateeCustom<T, boolean>",
          "optional": true
        },
        {
          "name": "fromIndex",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T|undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "findLast",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ObjectIteratorTypeGuard<T, S>",
          "optional": false
        },
        {
          "name": "fromIndex",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "S|undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "findLast",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ObjectIterateeCustom<T, boolean>",
          "optional": true
        },
        {
          "name": "fromIndex",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T[keyof T]|undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMap",
      "parameters": [
        {
          "name": "collection",
          "type": "Dictionary<Many<T>> | NumericDictionary<Many<T>> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMap",
      "parameters": [
        {
          "name": "collection",
          "type": "object | null | undefined",
          "optional": false
        }
      ],
      "returnType": "any[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMap",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ListIterator<T, Many<TResult>>",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMap",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, Many<TResult>>",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMap",
      "parameters": [
        {
          "name": "collection",
          "type": "object | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "any[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMap",
      "parameters": [
        {
          "name": "collection",
          "type": "object | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "boolean[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMapDeep",
      "parameters": [
        {
          "name": "collection",
          "type": "Dictionary<ListOfRecursiveArraysOrValues<T> | T> | NumericDictionary<ListOfRecursiveArraysOrValues<T> | T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMapDeep",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ListIterator<T, ListOfRecursiveArraysOrValues<TResult> | TResult>",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMapDeep",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, ListOfRecursiveArraysOrValues<TResult> | TResult>",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMapDeep",
      "parameters": [
        {
          "name": "collection",
          "type": "object | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "any[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMapDeep",
      "parameters": [
        {
          "name": "collection",
          "type": "object | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "boolean[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMapDepth",
      "parameters": [
        {
          "name": "collection",
          "type": "Dictionary<ListOfRecursiveArraysOrValues<T> | T> | NumericDictionary<ListOfRecursiveArraysOrValues<T> | T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMapDepth",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ListIterator<T, ListOfRecursiveArraysOrValues<TResult> | TResult>",
          "optional": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMapDepth",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, ListOfRecursiveArraysOrValues<TResult> | TResult>",
          "optional": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMapDepth",
      "parameters": [
        {
          "name": "collection",
          "type": "object | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "string",
          "optional": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "any[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flatMapDepth",
      "parameters": [
        {
          "name": "collection",
          "type": "object | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "object",
          "optional": false
        },
        {
          "name": "depth",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "boolean[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEach",
      "parameters": [
        {
          "name": "collection",
          "type": "T[]",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ArrayIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEach",
      "parameters": [
        {
          "name": "collection",
          "type": "string",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "StringIterator<any>",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEach",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ListIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "List<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEach",
      "parameters": [
        {
          "name": "collection",
          "type": "T",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEach",
      "parameters": [
        {
          "name": "collection",
          "type": "TArray & (T[] | null | undefined)",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ArrayIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "TArray",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEach",
      "parameters": [
        {
          "name": "collection",
          "type": "TString",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "StringIterator<any>",
          "optional": true
        }
      ],
      "returnType": "TString",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEach",
      "parameters": [
        {
          "name": "collection",
          "type": "TList & (List<T> | null | undefined)",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ListIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "TList",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEach",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T | null | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEachRight",
      "parameters": [
        {
          "name": "collection",
          "type": "T[]",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ArrayIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEachRight",
      "parameters": [
        {
          "name": "collection",
          "type": "string",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "StringIterator<any>",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEachRight",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ListIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "List<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEachRight",
      "parameters": [
        {
          "name": "collection",
          "type": "T",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEachRight",
      "parameters": [
        {
          "name": "collection",
          "type": "TArray & (T[] | null | undefined)",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ArrayIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "TArray",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEachRight",
      "parameters": [
        {
          "name": "collection",
          "type": "TString",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "StringIterator<any>",
          "optional": true
        }
      ],
      "returnType": "TString",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEachRight",
      "parameters": [
        {
          "name": "collection",
          "type": "TList & (List<T> | null | undefined)",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ListIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "TList",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forEachRight",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T | null | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "groupBy",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<T[]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "groupBy",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T[keyof T]>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<Array<T[keyof T]>>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "includes",
      "parameters": [
        {
          "name": "collection",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "target",
          "type": "T",
          "optional": false
        },
        {
          "name": "fromIndex",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "invokeMap",
      "parameters": [
        {
          "name": "collection",
          "type": "object | null | undefined",
          "optional": false
        },
        {
          "name": "methodName",
          "type": "string",
          "optional": false
        },
        {
          "name": "args",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "any[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "invokeMap",
      "parameters": [
        {
          "name": "collection",
          "type": "object | null | undefined",
          "optional": false
        },
        {
          "name": "method",
          "type": "(...args: any[]) => TResult",
          "optional": false
        },
        {
          "name": "args",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "keyBy",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIterateeCustom<T, PropertyName>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "keyBy",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIterateeCustom<T[keyof T], PropertyName>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<T[keyof T]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "map",
      "parameters": [
        {
          "name": "collection",
          "type": "T",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "TupleIterator<T, TResult>",
          "optional": false
        }
      ],
      "returnType": "{ [K in keyof T]: TResult }",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "map",
      "parameters": [
        {
          "name": "collection",
          "type": "T[] | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ArrayIterator<T, TResult>",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "map",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ListIterator<T, TResult>",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "map",
      "parameters": [
        {
          "name": "collection",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "map",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, TResult>",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "map",
      "parameters": [
        {
          "name": "collection",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "K",
          "optional": false
        }
      ],
      "returnType": "Array<T[K]>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "map",
      "parameters": [
        {
          "name": "collection",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "any[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "map",
      "parameters": [
        {
          "name": "collection",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "object",
          "optional": true
        }
      ],
      "returnType": "boolean[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "orderBy",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratees",
          "type": "Many<ListIterator<T, NotVoid>>",
          "optional": true
        },
        {
          "name": "orders",
          "type": "Many<boolean|\"asc\"|\"desc\">",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "orderBy",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratees",
          "type": "Many<ListIteratee<T>>",
          "optional": true
        },
        {
          "name": "orders",
          "type": "Many<boolean|\"asc\"|\"desc\">",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "orderBy",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratees",
          "type": "Many<ObjectIterator<T, NotVoid>>",
          "optional": true
        },
        {
          "name": "orders",
          "type": "Many<boolean|\"asc\"|\"desc\">",
          "optional": true
        }
      ],
      "returnType": "Array<T[keyof T]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "orderBy",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratees",
          "type": "Many<ObjectIteratee<T>>",
          "optional": true
        },
        {
          "name": "orders",
          "type": "Many<boolean|\"asc\"|\"desc\">",
          "optional": true
        }
      ],
      "returnType": "Array<T[keyof T]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "partition",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "ValueIteratorTypeGuard<T, U>",
          "optional": false
        }
      ],
      "returnType": "[U[], Array<Exclude<T, U>>]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "partition",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "ValueIteratee<T>",
          "optional": false
        }
      ],
      "returnType": "[T[], T[]]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "partition",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "ValueIteratee<T[keyof T]>",
          "optional": false
        }
      ],
      "returnType": "[Array<T[keyof T]>, Array<T[keyof T]>]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "reduce",
      "parameters": [
        {
          "name": "collection",
          "type": "T[] | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "MemoListIterator<T, TResult, T[]>",
          "optional": false
        },
        {
          "name": "accumulator",
          "type": "TResult",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "reduce",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "MemoListIterator<T, TResult, List<T>>",
          "optional": false
        },
        {
          "name": "accumulator",
          "type": "TResult",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "reduce",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "MemoObjectIterator<T[keyof T], TResult, T>",
          "optional": false
        },
        {
          "name": "accumulator",
          "type": "TResult",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "reduce",
      "parameters": [
        {
          "name": "collection",
          "type": "T[] | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "MemoListIterator<T, T, T[]>",
          "optional": false
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "reduce",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "MemoListIterator<T, T, List<T>>",
          "optional": false
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "reduce",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "MemoObjectIterator<T[keyof T], T[keyof T], T>",
          "optional": false
        }
      ],
      "returnType": "T[keyof T] | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "reduceRight",
      "parameters": [
        {
          "name": "collection",
          "type": "T[] | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "MemoListIterator<T, TResult, T[]>",
          "optional": false
        },
        {
          "name": "accumulator",
          "type": "TResult",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "reduceRight",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "MemoListIterator<T, TResult, List<T>>",
          "optional": false
        },
        {
          "name": "accumulator",
          "type": "TResult",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "reduceRight",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "MemoObjectIterator<T[keyof T], TResult, T>",
          "optional": false
        },
        {
          "name": "accumulator",
          "type": "TResult",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "reduceRight",
      "parameters": [
        {
          "name": "collection",
          "type": "T[] | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "MemoListIterator<T, T, T[]>",
          "optional": false
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "reduceRight",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "MemoListIterator<T, T, List<T>>",
          "optional": false
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "reduceRight",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "MemoObjectIterator<T[keyof T], T[keyof T], T>",
          "optional": false
        }
      ],
      "returnType": "T[keyof T] | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "reject",
      "parameters": [
        {
          "name": "collection",
          "type": "string | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "StringIterator<boolean>",
          "optional": true
        }
      ],
      "returnType": "string[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "reject",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIterateeCustom<T, boolean>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "reject",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ObjectIterateeCustom<T, boolean>",
          "optional": true
        }
      ],
      "returnType": "Array<T[keyof T]>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "sample",
      "parameters": [
        {
          "name": "collection",
          "type": "readonly [T, ...T[]]",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "sample",
      "parameters": [
        {
          "name": "collection",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "sample",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[keyof T] | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "sampleSize",
      "parameters": [
        {
          "name": "collection",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "n",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "sampleSize",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "n",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "Array<T[keyof T]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "shuffle",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "shuffle",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        }
      ],
      "returnType": "Array<T[keyof T]>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "size",
      "parameters": [
        {
          "name": "collection",
          "type": "object | string | null | undefined",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "some",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ListIterateeCustom<T, boolean>",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "some",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ObjectIterateeCustom<T, boolean>",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "sortBy",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratees",
          "type": "Array<Many<ListIteratee<T>>>",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "sortBy",
      "parameters": [
        {
          "name": "collection",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratees",
          "type": "Array<Many<ObjectIteratee<T>>>",
          "optional": false
        }
      ],
      "returnType": "Array<T[keyof T]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "now",
      "parameters": [],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "after",
      "parameters": [
        {
          "name": "n",
          "type": "number",
          "optional": false
        },
        {
          "name": "func",
          "type": "TFunc",
          "optional": false
        }
      ],
      "returnType": "TFunc",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "ary",
      "parameters": [
        {
          "name": "func",
          "type": "(...args: any[]) => any",
          "optional": false
        },
        {
          "name": "n",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "(...args: any[]) => any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "before",
      "parameters": [
        {
          "name": "n",
          "type": "number",
          "optional": false
        },
        {
          "name": "func",
          "type": "TFunc",
          "optional": false
        }
      ],
      "returnType": "TFunc",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "debounce",
      "parameters": [
        {
          "name": "func",
          "type": "T",
          "optional": false
        },
        {
          "name": "wait",
          "type": "number | undefined",
          "optional": false
        },
        {
          "name": "options",
          "type": "DebounceSettingsLeading",
          "optional": false
        }
      ],
      "returnType": "DebouncedFuncLeading<T>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "debounce",
      "parameters": [
        {
          "name": "func",
          "type": "T",
          "optional": false
        },
        {
          "name": "wait",
          "type": "number",
          "optional": true
        },
        {
          "name": "options",
          "type": "DebounceSettings",
          "optional": true
        }
      ],
      "returnType": "DebouncedFunc<T>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "defer",
      "parameters": [
        {
          "name": "func",
          "type": "(...args: any[]) => any",
          "optional": false
        },
        {
          "name": "args",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "delay",
      "parameters": [
        {
          "name": "func",
          "type": "(...args: any[]) => any",
          "optional": false
        },
        {
          "name": "wait",
          "type": "number",
          "optional": false
        },
        {
          "name": "args",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "flip",
      "parameters": [
        {
          "name": "func",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "negate",
      "parameters": [
        {
          "name": "predicate",
          "type": "(...args: T) => boolean",
          "optional": false
        }
      ],
      "returnType": "(...args: T) => boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "once",
      "parameters": [
        {
          "name": "func",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "overArgs",
      "parameters": [
        {
          "name": "func",
          "type": "(...args: any[]) => any",
          "optional": false
        },
        {
          "name": "transforms",
          "type": "Array<Many<(...args: any[]) => any>>",
          "optional": false
        }
      ],
      "returnType": "(...args: any[]) => any",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "rearg",
      "parameters": [
        {
          "name": "func",
          "type": "(...args: any[]) => any",
          "optional": false
        },
        {
          "name": "indexes",
          "type": "Array<Many<number>>",
          "optional": false
        }
      ],
      "returnType": "(...args: any[]) => any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "rest",
      "parameters": [
        {
          "name": "func",
          "type": "(...args: any[]) => any",
          "optional": false
        },
        {
          "name": "start",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "(...args: any[]) => any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "spread",
      "parameters": [
        {
          "name": "func",
          "type": "(...args: any[]) => TResult",
          "optional": false
        },
        {
          "name": "start",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "(...args: any[]) => TResult",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "throttle",
      "parameters": [
        {
          "name": "func",
          "type": "T",
          "optional": false
        },
        {
          "name": "wait",
          "type": "number",
          "optional": true
        },
        {
          "name": "options",
          "type": "ThrottleSettingsLeading",
          "optional": true
        }
      ],
      "returnType": "DebouncedFuncLeading<T>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "throttle",
      "parameters": [
        {
          "name": "func",
          "type": "T",
          "optional": false
        },
        {
          "name": "wait",
          "type": "number",
          "optional": true
        },
        {
          "name": "options",
          "type": "ThrottleSettings",
          "optional": true
        }
      ],
      "returnType": "DebouncedFunc<T>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "unary",
      "parameters": [
        {
          "name": "func",
          "type": "(arg1: T, ...args: any[]) => TResult",
          "optional": false
        }
      ],
      "returnType": "(arg1: T) => TResult",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "wrap",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        },
        {
          "name": "wrapper",
          "type": "(value: T, ...args: TArgs[]) => TResult",
          "optional": false
        }
      ],
      "returnType": "(...args: TArgs[]) => TResult",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "castArray",
      "parameters": [
        {
          "name": "value",
          "type": "Many<T>",
          "optional": true
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "clone",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "cloneDeep",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "cloneDeepWith",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "CloneDeepWithCustomizer<T>",
          "optional": false
        }
      ],
      "returnType": "any",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "cloneDeepWith",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "cloneWith",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "CloneWithCustomizer<T, TResult>",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "cloneWith",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "CloneWithCustomizer<T, TResult | undefined>",
          "optional": false
        }
      ],
      "returnType": "TResult | T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "cloneWith",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "conformsTo",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "source",
          "type": "ConformsPredicateObject<T>",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "eq",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        },
        {
          "name": "other",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "gt",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        },
        {
          "name": "other",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "gte",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        },
        {
          "name": "other",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "isArguments",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is IArguments",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isArray",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is any[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isArray",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is any[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isArrayBuffer",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is ArrayBuffer",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isArrayLike",
      "parameters": [
        {
          "name": "t",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isArrayLike",
      "parameters": [
        {
          "name": "value",
          "type": "((...args: any[]) => any) | null | undefined",
          "optional": false
        }
      ],
      "returnType": "value is never",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isArrayLike",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "value is { length: number }",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isArrayLikeObject",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isArrayLikeObject",
      "parameters": [
        {
          "name": "value",
          "type": "((...args: any[]) => any) | FunctionBase | string | boolean | number | null | undefined",
          "optional": false
        }
      ],
      "returnType": "value is never",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isArrayLikeObject",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "value is object & { length: number }",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isBoolean",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isBuffer",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isDate",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is Date",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isElement",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isEmpty",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isEmpty",
      "parameters": [
        {
          "name": "value",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "value is ''",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isEmpty",
      "parameters": [
        {
          "name": "value",
          "type": "Map<any, any> | Set<any> | List<any> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isEmpty",
      "parameters": [
        {
          "name": "value",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isEmpty",
      "parameters": [
        {
          "name": "value",
          "type": "T | null | undefined",
          "optional": false
        }
      ],
      "returnType": "value is EmptyObjectOf<T> | null | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isEmpty",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isEqual",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        },
        {
          "name": "other",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isEqualWith",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        },
        {
          "name": "other",
          "type": "any",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "IsEqualCustomizer",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isError",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "value is Error",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isFinite",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isFunction",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "value is (...args: any[]) => any",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isInteger",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isLength",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isMap",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is Map<any, any>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isMatch",
      "parameters": [
        {
          "name": "object",
          "type": "object",
          "optional": false
        },
        {
          "name": "source",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isMatchWith",
      "parameters": [
        {
          "name": "object",
          "type": "object",
          "optional": false
        },
        {
          "name": "source",
          "type": "object",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "isMatchWithCustomizer",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isNaN",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isNative",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "value is (...args: any[]) => any",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isNil",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "value is null | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isNull",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "value is null",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isNumber",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isObject",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is object",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isObjectLike",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isPlainObject",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isRegExp",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is RegExp",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isSafeInteger",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isSet",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is Set<any>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isString",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isSymbol",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "value is symbol",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isTypedArray",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isUndefined",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "value is undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isWeakMap",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is WeakMap<object, any>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "isWeakSet",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "value is WeakSet<object>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "lt",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        },
        {
          "name": "other",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "lte",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        },
        {
          "name": "other",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "toArray",
      "parameters": [
        {
          "name": "value",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toArray",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "Array<T[keyof T]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toArray",
      "parameters": [],
      "returnType": "any[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toFinite",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toInteger",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toLength",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toNumber",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toPlainObject",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "any",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toSafeInteger",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toString",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "add",
      "parameters": [
        {
          "name": "augend",
          "type": "number",
          "optional": false
        },
        {
          "name": "addend",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "ceil",
      "parameters": [
        {
          "name": "n",
          "type": "number",
          "optional": false
        },
        {
          "name": "precision",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "divide",
      "parameters": [
        {
          "name": "dividend",
          "type": "number",
          "optional": false
        },
        {
          "name": "divisor",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "floor",
      "parameters": [
        {
          "name": "n",
          "type": "number",
          "optional": false
        },
        {
          "name": "precision",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "max",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "maxBy",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mean",
      "parameters": [
        {
          "name": "collection",
          "type": "List<any> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "meanBy",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "min",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "minBy",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "multiply",
      "parameters": [
        {
          "name": "multiplier",
          "type": "number",
          "optional": false
        },
        {
          "name": "multiplicand",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "round",
      "parameters": [
        {
          "name": "n",
          "type": "number",
          "optional": false
        },
        {
          "name": "precision",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "subtract",
      "parameters": [
        {
          "name": "minuend",
          "type": "number",
          "optional": false
        },
        {
          "name": "subtrahend",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "sum",
      "parameters": [
        {
          "name": "collection",
          "type": "List<any> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "sumBy",
      "parameters": [
        {
          "name": "collection",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "((value: T) => number) | string",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "clamp",
      "parameters": [
        {
          "name": "number",
          "type": "number",
          "optional": false
        },
        {
          "name": "lower",
          "type": "number",
          "optional": false
        },
        {
          "name": "upper",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "clamp",
      "parameters": [
        {
          "name": "number",
          "type": "number",
          "optional": false
        },
        {
          "name": "upper",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "inRange",
      "parameters": [
        {
          "name": "n",
          "type": "number",
          "optional": false
        },
        {
          "name": "start",
          "type": "number",
          "optional": false
        },
        {
          "name": "end",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "random",
      "parameters": [
        {
          "name": "floating",
          "type": "boolean",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "random",
      "parameters": [
        {
          "name": "max",
          "type": "number",
          "optional": false
        },
        {
          "name": "floating",
          "type": "boolean",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "random",
      "parameters": [
        {
          "name": "min",
          "type": "number",
          "optional": false
        },
        {
          "name": "max",
          "type": "number",
          "optional": false
        },
        {
          "name": "floating",
          "type": "boolean",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "random",
      "parameters": [
        {
          "name": "min",
          "type": "number",
          "optional": false
        },
        {
          "name": "index",
          "type": "string | number",
          "optional": false
        },
        {
          "name": "guard",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "assign",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source",
          "type": "TSource",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "assign",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "assign",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "assign",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "source4",
          "type": "TSource4",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3 & TSource4",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "assign",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        }
      ],
      "returnType": "TObject",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "assign",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "otherArgs",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "assignIn",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source",
          "type": "TSource",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignIn",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignIn",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignIn",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "source4",
          "type": "TSource4",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3 & TSource4",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignIn",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        }
      ],
      "returnType": "TObject",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignIn",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "otherArgs",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignInWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source",
          "type": "TSource",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "AssignCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignInWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "AssignCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignInWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "AssignCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignInWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "source4",
          "type": "TSource4",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "AssignCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3 & TSource4",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignInWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        }
      ],
      "returnType": "TObject",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignInWith",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "otherArgs",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source",
          "type": "TSource",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "AssignCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "AssignCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "AssignCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "source4",
          "type": "TSource4",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "AssignCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3 & TSource4",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        }
      ],
      "returnType": "TObject",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "assignWith",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "otherArgs",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "at",
      "parameters": [
        {
          "name": "object",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "props",
          "type": "PropertyPath[]",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "at",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "props",
          "type": "Array<Many<keyof T>>",
          "optional": false
        }
      ],
      "returnType": "Array<T[keyof T]>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "create",
      "parameters": [
        {
          "name": "prototype",
          "type": "T",
          "optional": false
        },
        {
          "name": "properties",
          "type": "U",
          "optional": true
        }
      ],
      "returnType": "T & U",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "defaults",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source",
          "type": "TSource",
          "optional": false
        }
      ],
      "returnType": "NonNullable<TSource & TObject>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "defaults",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        }
      ],
      "returnType": "NonNullable<TSource2 & TSource1 & TObject>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "defaults",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        }
      ],
      "returnType": "NonNullable<TSource3 & TSource2 & TSource1 & TObject>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "defaults",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "source4",
          "type": "TSource4",
          "optional": false
        }
      ],
      "returnType": "NonNullable<TSource4 & TSource3 & TSource2 & TSource1 & TObject>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "defaults",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        }
      ],
      "returnType": "NonNullable<TObject>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "defaults",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "sources",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "defaultsDeep",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "sources",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "any",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "entries",
      "parameters": [
        {
          "name": "object",
          "type": "Dictionary<T> | NumericDictionary<T>",
          "optional": true
        }
      ],
      "returnType": "Array<[string, T]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "entries",
      "parameters": [
        {
          "name": "object",
          "type": "object",
          "optional": true
        }
      ],
      "returnType": "Array<[string, any]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "entriesIn",
      "parameters": [
        {
          "name": "object",
          "type": "Dictionary<T> | NumericDictionary<T>",
          "optional": true
        }
      ],
      "returnType": "Array<[string, T]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "entriesIn",
      "parameters": [
        {
          "name": "object",
          "type": "object",
          "optional": true
        }
      ],
      "returnType": "Array<[string, any]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "extend",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source",
          "type": "TSource",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "extend",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "extend",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "extend",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "source4",
          "type": "TSource4",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3 & TSource4",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "extend",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        }
      ],
      "returnType": "TObject",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "extend",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "otherArgs",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "extendWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source",
          "type": "TSource",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "AssignCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "extendWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "AssignCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "extendWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "AssignCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "extendWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "source4",
          "type": "TSource4",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "AssignCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3 & TSource4",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "extendWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        }
      ],
      "returnType": "TObject",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "extendWith",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "otherArgs",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "findKey",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ObjectIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "string | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "findLastKey",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ObjectIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "string | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forIn",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forIn",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T | null | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forInRight",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forInRight",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T | null | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forOwn",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forOwn",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T | null | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forOwnRight",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "forOwnRight",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIterator<T, any>",
          "optional": true
        }
      ],
      "returnType": "T | null | undefined",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "functions",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "string[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "functionsIn",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "string[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "path",
          "type": "TKey | [TKey]",
          "optional": false
        }
      ],
      "returnType": "TObject[TKey]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "TObject | null | undefined",
          "optional": false
        },
        {
          "name": "path",
          "type": "TKey | [TKey]",
          "optional": false
        }
      ],
      "returnType": "TObject[TKey] | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "TObject | null | undefined",
          "optional": false
        },
        {
          "name": "path",
          "type": "TKey | [TKey]",
          "optional": false
        },
        {
          "name": "defaultValue",
          "type": "TDefault",
          "optional": false
        }
      ],
      "returnType": "Exclude<TObject[TKey], undefined> | TDefault",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "path",
          "type": "[TKey1, TKey2]",
          "optional": false
        }
      ],
      "returnType": "TObject[TKey1][TKey2]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "TObject | null | undefined",
          "optional": false
        },
        {
          "name": "path",
          "type": "[TKey1, TKey2]",
          "optional": false
        }
      ],
      "returnType": "NonNullable<TObject[TKey1]>[TKey2] | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "TObject | null | undefined",
          "optional": false
        },
        {
          "name": "path",
          "type": "[TKey1, TKey2]",
          "optional": false
        },
        {
          "name": "defaultValue",
          "type": "TDefault",
          "optional": false
        }
      ],
      "returnType": "Exclude<NonNullable<TObject[TKey1]>[TKey2], undefined> | TDefault",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "path",
          "type": "[TKey1, TKey2, TKey3]",
          "optional": false
        }
      ],
      "returnType": "TObject[TKey1][TKey2][TKey3]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "TObject | null | undefined",
          "optional": false
        },
        {
          "name": "path",
          "type": "[TKey1, TKey2, TKey3]",
          "optional": false
        }
      ],
      "returnType": "NonNullable<NonNullable<TObject[TKey1]>[TKey2]>[TKey3] | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "TObject | null | undefined",
          "optional": false
        },
        {
          "name": "path",
          "type": "[TKey1, TKey2, TKey3]",
          "optional": false
        },
        {
          "name": "defaultValue",
          "type": "TDefault",
          "optional": false
        }
      ],
      "returnType": "Exclude<NonNullable<NonNullable<TObject[TKey1]>[TKey2]>[TKey3], undefined> | TDefault",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "path",
          "type": "[TKey1, TKey2, TKey3, TKey4]",
          "optional": false
        }
      ],
      "returnType": "TObject[TKey1][TKey2][TKey3][TKey4]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "TObject | null | undefined",
          "optional": false
        },
        {
          "name": "path",
          "type": "[TKey1, TKey2, TKey3, TKey4]",
          "optional": false
        }
      ],
      "returnType": "NonNullable<NonNullable<NonNullable<TObject[TKey1]>[TKey2]>[TKey3]>[TKey4] | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "TObject | null | undefined",
          "optional": false
        },
        {
          "name": "path",
          "type": "[TKey1, TKey2, TKey3, TKey4]",
          "optional": false
        },
        {
          "name": "defaultValue",
          "type": "TDefault",
          "optional": false
        }
      ],
      "returnType": "Exclude<NonNullable<NonNullable<NonNullable<TObject[TKey1]>[TKey2]>[TKey3]>[TKey4], undefined> | TDefault",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "NumericDictionary<T>",
          "optional": false
        },
        {
          "name": "path",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "path",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "T | undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "path",
          "type": "number",
          "optional": false
        },
        {
          "name": "defaultValue",
          "type": "TDefault",
          "optional": false
        }
      ],
      "returnType": "T | TDefault",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "null | undefined",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "defaultValue",
          "type": "TDefault",
          "optional": false
        }
      ],
      "returnType": "TDefault",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "null | undefined",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        }
      ],
      "returnType": "undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "data",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "path",
          "type": "TPath",
          "optional": false
        }
      ],
      "returnType": "string extends TPath ? any : GetFieldType<TObject, TPath>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "data",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "path",
          "type": "TPath",
          "optional": false
        },
        {
          "name": "defaultValue",
          "type": "TDefault",
          "optional": false
        }
      ],
      "returnType": "Exclude<GetFieldType<TObject, TPath>, null | undefined> | TDefault",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "get",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "defaultValue",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "has",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "path",
          "type": "K",
          "optional": false
        }
      ],
      "returnType": "object is T & { [P in K]: P extends keyof T ? T[P] : Record<string, unknown> extends T ? T[keyof T] : unknown} & {[uniqueSymbol]: unknown}",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "has",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "hasIn",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "invert",
      "parameters": [
        {
          "name": "object",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "Dictionary<string>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "invertBy",
      "parameters": [
        {
          "name": "object",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "interatee",
          "type": "ValueIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<string[]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "invertBy",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "interatee",
          "type": "ValueIteratee<T[keyof T]>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<string[]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "invoke",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "args",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "keys",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "string[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "keysIn",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": true
        }
      ],
      "returnType": "string[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapKeys",
      "parameters": [
        {
          "name": "object",
          "type": "List<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ListIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapKeys",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "ObjectIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<T[keyof T]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapValues",
      "parameters": [
        {
          "name": "obj",
          "type": "string | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "StringIterator<TResult>",
          "optional": false
        }
      ],
      "returnType": "NumericDictionary<TResult>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapValues",
      "parameters": [
        {
          "name": "array",
          "type": "T[]",
          "optional": false
        },
        {
          "name": "callback",
          "type": "ArrayIterator<T, TResult>",
          "optional": false
        }
      ],
      "returnType": "NumericDictionary<TResult>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapValues",
      "parameters": [
        {
          "name": "obj",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "callback",
          "type": "ObjectIterator<T, TResult>",
          "optional": false
        }
      ],
      "returnType": "{ [P in keyof T]: TResult }",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapValues",
      "parameters": [
        {
          "name": "obj",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "Dictionary<boolean>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapValues",
      "parameters": [
        {
          "name": "obj",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "{ [P in keyof T]: boolean }",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapValues",
      "parameters": [
        {
          "name": "obj",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "TKey",
          "optional": false
        }
      ],
      "returnType": "Dictionary<T[TKey]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapValues",
      "parameters": [
        {
          "name": "obj",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "Dictionary<any>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapValues",
      "parameters": [
        {
          "name": "obj",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "string",
          "optional": false
        }
      ],
      "returnType": "{ [P in keyof T]: any }",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapValues",
      "parameters": [
        {
          "name": "obj",
          "type": "string | null | undefined",
          "optional": false
        }
      ],
      "returnType": "NumericDictionary<string>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapValues",
      "parameters": [
        {
          "name": "obj",
          "type": "Dictionary<T> | NumericDictionary<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "Dictionary<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapValues",
      "parameters": [
        {
          "name": "obj",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mapValues",
      "parameters": [
        {
          "name": "obj",
          "type": "T | null | undefined",
          "optional": false
        }
      ],
      "returnType": "PartialObject<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "merge",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source",
          "type": "TSource",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "merge",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "merge",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "merge",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "source4",
          "type": "TSource4",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3 & TSource4",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "merge",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "otherArgs",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "mergeWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source",
          "type": "TSource",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "MergeWithCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mergeWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "MergeWithCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mergeWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "MergeWithCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mergeWith",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source1",
          "type": "TSource1",
          "optional": false
        },
        {
          "name": "source2",
          "type": "TSource2",
          "optional": false
        },
        {
          "name": "source3",
          "type": "TSource3",
          "optional": false
        },
        {
          "name": "source4",
          "type": "TSource4",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "MergeWithCustomizer",
          "optional": false
        }
      ],
      "returnType": "TObject & TSource1 & TSource2 & TSource3 & TSource4",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mergeWith",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "otherArgs",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "any",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "omit",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "paths",
          "type": "K",
          "optional": false
        }
      ],
      "returnType": "Pick<T, Exclude<keyof T, K[number]>>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "omit",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "paths",
          "type": "Array<Many<K>>",
          "optional": false
        }
      ],
      "returnType": "Omit<T, K>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "omit",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "paths",
          "type": "Array<Many<PropertyName>>",
          "optional": false
        }
      ],
      "returnType": "PartialObject<T>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "omitBy",
      "parameters": [
        {
          "name": "object",
          "type": "Dictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ValueKeyIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "omitBy",
      "parameters": [
        {
          "name": "object",
          "type": "NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ValueKeyIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "NumericDictionary<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "omitBy",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ValueKeyIteratee<T[keyof T]>",
          "optional": false
        }
      ],
      "returnType": "PartialObject<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pick",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "props",
          "type": "Array<Many<U>>",
          "optional": false
        }
      ],
      "returnType": "Pick<T, U>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "pick",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "props",
          "type": "Array<Many<PropertyPath>>",
          "optional": false
        }
      ],
      "returnType": "PartialObject<T>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "pickBy",
      "parameters": [
        {
          "name": "object",
          "type": "Dictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ValueKeyIterateeTypeGuard<T, S>",
          "optional": false
        }
      ],
      "returnType": "Dictionary<S>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pickBy",
      "parameters": [
        {
          "name": "object",
          "type": "NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ValueKeyIterateeTypeGuard<T, S>",
          "optional": false
        }
      ],
      "returnType": "NumericDictionary<S>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pickBy",
      "parameters": [
        {
          "name": "object",
          "type": "Dictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ValueKeyIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "Dictionary<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pickBy",
      "parameters": [
        {
          "name": "object",
          "type": "NumericDictionary<T> | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ValueKeyIteratee<T>",
          "optional": true
        }
      ],
      "returnType": "NumericDictionary<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pickBy",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "predicate",
          "type": "ValueKeyIteratee<T[keyof T]>",
          "optional": true
        }
      ],
      "returnType": "PartialObject<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "result",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "defaultValue",
          "type": "TResult | ((...args: any[]) => TResult)",
          "optional": true
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "set",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "set",
      "parameters": [
        {
          "name": "object",
          "type": "object",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "setWith",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "value",
          "type": "any",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "SetWithCustomizer<T>",
          "optional": true
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "setWith",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "value",
          "type": "any",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "SetWithCustomizer<T>",
          "optional": true
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toPairs",
      "parameters": [
        {
          "name": "object",
          "type": "Dictionary<T> | NumericDictionary<T>",
          "optional": true
        }
      ],
      "returnType": "Array<[string, T]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toPairs",
      "parameters": [
        {
          "name": "object",
          "type": "object",
          "optional": true
        }
      ],
      "returnType": "Array<[string, any]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toPairsIn",
      "parameters": [
        {
          "name": "object",
          "type": "Dictionary<T> | NumericDictionary<T>",
          "optional": true
        }
      ],
      "returnType": "Array<[string, T]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toPairsIn",
      "parameters": [
        {
          "name": "object",
          "type": "object",
          "optional": true
        }
      ],
      "returnType": "Array<[string, any]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "transform",
      "parameters": [
        {
          "name": "object",
          "type": "readonly T[]",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "MemoVoidArrayIterator<T, TResult>",
          "optional": false
        },
        {
          "name": "accumulator",
          "type": "TResult",
          "optional": true
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "transform",
      "parameters": [
        {
          "name": "object",
          "type": "Dictionary<T>",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "MemoVoidDictionaryIterator<T, string, TResult>",
          "optional": false
        },
        {
          "name": "accumulator",
          "type": "TResult",
          "optional": true
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "transform",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "MemoVoidDictionaryIterator<T[keyof T], keyof T, TResult>",
          "optional": false
        },
        {
          "name": "accumulator",
          "type": "TResult",
          "optional": true
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "transform",
      "parameters": [
        {
          "name": "object",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "any[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "transform",
      "parameters": [
        {
          "name": "object",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "Dictionary<any>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "unset",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "update",
      "parameters": [
        {
          "name": "object",
          "type": "object",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "updater",
          "type": "(value: any) => any",
          "optional": false
        }
      ],
      "returnType": "any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "updateWith",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "updater",
          "type": "(oldValue: any) => any",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "SetWithCustomizer<T>",
          "optional": true
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "updateWith",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "updater",
          "type": "(oldValue: any) => any",
          "optional": false
        },
        {
          "name": "customizer",
          "type": "SetWithCustomizer<T>",
          "optional": true
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "values",
      "parameters": [
        {
          "name": "object",
          "type": "Dictionary<T> | NumericDictionary<T> | List<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "values",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        }
      ],
      "returnType": "Array<T[keyof T]>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "values",
      "parameters": [
        {
          "name": "object",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "any[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "valuesIn",
      "parameters": [
        {
          "name": "object",
          "type": "Dictionary<T> | NumericDictionary<T> | List<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "T[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "valuesIn",
      "parameters": [
        {
          "name": "object",
          "type": "T | null | undefined",
          "optional": false
        }
      ],
      "returnType": "Array<T[keyof T]>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "chain",
      "parameters": [
        {
          "name": "value",
          "type": "TrapAny",
          "optional": false
        }
      ],
      "returnType": "CollectionChain<any> & FunctionChain<any> & ObjectChain<any> & PrimitiveChain<any> & StringChain",
      "isExported": true,
      "description": "source"
    },
    {
      "name": "chain",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "PrimitiveChain<T>",
      "isExported": true,
      "description": "source"
    },
    {
      "name": "chain",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "StringChain<T>",
      "isExported": true,
      "description": "source"
    },
    {
      "name": "chain",
      "parameters": [
        {
          "name": "value",
          "type": "string | null | undefined",
          "optional": false
        }
      ],
      "returnType": "StringNullableChain",
      "isExported": true,
      "description": "source"
    },
    {
      "name": "chain",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "FunctionChain<T>",
      "isExported": true,
      "description": "source"
    },
    {
      "name": "chain",
      "parameters": [
        {
          "name": "value",
          "type": "List<T> | null | undefined",
          "optional": false
        }
      ],
      "returnType": "CollectionChain<T>",
      "isExported": true,
      "description": "source"
    },
    {
      "name": "chain",
      "parameters": [
        {
          "name": "value",
          "type": "T | null | undefined",
          "optional": false
        }
      ],
      "returnType": "ObjectChain<T>",
      "isExported": true,
      "description": "source"
    },
    {
      "name": "chain",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "PrimitiveChain<T>",
      "isExported": true,
      "description": "source"
    },
    {
      "name": "tap",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        },
        {
          "name": "interceptor",
          "type": "(value: T) => void",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "source"
    },
    {
      "name": "thru",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        },
        {
          "name": "interceptor",
          "type": "(value: T) => TResult",
          "optional": false
        }
      ],
      "returnType": "TResult",
      "isExported": true,
      "description": "source"
    },
    {
      "name": "camelCase",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "capitalize",
      "parameters": [
        {
          "name": "string",
          "type": "T",
          "optional": true
        }
      ],
      "returnType": "string extends T ? string : Capitalize<Lowercase<T>>",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "deburr",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "endsWith",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        },
        {
          "name": "target",
          "type": "string",
          "optional": true
        },
        {
          "name": "position",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "escape",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "escapeRegExp",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "kebabCase",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "lowerCase",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "lowerFirst",
      "parameters": [
        {
          "name": "string",
          "type": "T",
          "optional": true
        }
      ],
      "returnType": "Uncapitalize<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "pad",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        },
        {
          "name": "length",
          "type": "number",
          "optional": true
        },
        {
          "name": "chars",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "padEnd",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        },
        {
          "name": "length",
          "type": "number",
          "optional": true
        },
        {
          "name": "chars",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "padStart",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        },
        {
          "name": "length",
          "type": "number",
          "optional": true
        },
        {
          "name": "chars",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "parseInt",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": false
        },
        {
          "name": "radix",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "number",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "repeat",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        },
        {
          "name": "n",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "replace",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": false
        },
        {
          "name": "pattern",
          "type": "RegExp | string",
          "optional": false
        },
        {
          "name": "replacement",
          "type": "ReplaceFunction | string",
          "optional": false
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "replace",
      "parameters": [
        {
          "name": "pattern",
          "type": "RegExp | string",
          "optional": false
        },
        {
          "name": "replacement",
          "type": "ReplaceFunction | string",
          "optional": false
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "snakeCase",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "split",
      "parameters": [
        {
          "name": "string",
          "type": "string | null | undefined",
          "optional": false
        },
        {
          "name": "separator",
          "type": "RegExp | string",
          "optional": true
        },
        {
          "name": "limit",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "string[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "split",
      "parameters": [
        {
          "name": "string",
          "type": "string | null | undefined",
          "optional": false
        },
        {
          "name": "index",
          "type": "string | number",
          "optional": false
        },
        {
          "name": "guard",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "string[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "startCase",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "startsWith",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        },
        {
          "name": "target",
          "type": "string",
          "optional": true
        },
        {
          "name": "position",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "template",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        },
        {
          "name": "options",
          "type": "TemplateOptions",
          "optional": true
        }
      ],
      "returnType": "TemplateExecutor",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "toLower",
      "parameters": [
        {
          "name": "string",
          "type": "T",
          "optional": true
        }
      ],
      "returnType": "Lowercase<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "toUpper",
      "parameters": [
        {
          "name": "string",
          "type": "T",
          "optional": true
        }
      ],
      "returnType": "Uppercase<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "trim",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        },
        {
          "name": "chars",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "trim",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": false
        },
        {
          "name": "index",
          "type": "string | number",
          "optional": false
        },
        {
          "name": "guard",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "trimEnd",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        },
        {
          "name": "chars",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "trimEnd",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": false
        },
        {
          "name": "index",
          "type": "string | number",
          "optional": false
        },
        {
          "name": "guard",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "trimStart",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        },
        {
          "name": "chars",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "trimStart",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": false
        },
        {
          "name": "index",
          "type": "string | number",
          "optional": false
        },
        {
          "name": "guard",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "truncate",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        },
        {
          "name": "options",
          "type": "TruncateOptions",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "unescape",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "upperCase",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "upperFirst",
      "parameters": [
        {
          "name": "string",
          "type": "T",
          "optional": true
        }
      ],
      "returnType": "Capitalize<T>",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "words",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": true
        },
        {
          "name": "pattern",
          "type": "string | RegExp",
          "optional": true
        }
      ],
      "returnType": "string[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "words",
      "parameters": [
        {
          "name": "string",
          "type": "string",
          "optional": false
        },
        {
          "name": "index",
          "type": "string | number",
          "optional": false
        },
        {
          "name": "guard",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "string[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "attempt",
      "parameters": [
        {
          "name": "func",
          "type": "(...args: any[]) => TResult",
          "optional": false
        },
        {
          "name": "args",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "TResult | Error",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "bindAll",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        },
        {
          "name": "methodNames",
          "type": "Array<Many<string>>",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "cond",
      "parameters": [
        {
          "name": "pairs",
          "type": "Array<CondPairNullary<R>>",
          "optional": false
        }
      ],
      "returnType": "() => R",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "cond",
      "parameters": [
        {
          "name": "pairs",
          "type": "Array<CondPairUnary<T, R>>",
          "optional": false
        }
      ],
      "returnType": "(Target: T) => R",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "conforms",
      "parameters": [
        {
          "name": "source",
          "type": "ConformsPredicateObject<T>",
          "optional": false
        }
      ],
      "returnType": "(value: T) => boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "constant",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "() => T",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "defaultTo",
      "parameters": [
        {
          "name": "value",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "defaultValue",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "defaultTo",
      "parameters": [
        {
          "name": "value",
          "type": "T | null | undefined",
          "optional": false
        },
        {
          "name": "defaultValue",
          "type": "TDefault",
          "optional": false
        }
      ],
      "returnType": "T | TDefault",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flow",
      "parameters": [
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        },
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        },
        {
          "name": "f3",
          "type": "(a: R2) => R3",
          "optional": false
        },
        {
          "name": "f4",
          "type": "(a: R3) => R4",
          "optional": false
        },
        {
          "name": "f5",
          "type": "(a: R4) => R5",
          "optional": false
        },
        {
          "name": "f6",
          "type": "(a: R5) => R6",
          "optional": false
        },
        {
          "name": "f7",
          "type": "(a: R6) => R7",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => R7",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "flow",
      "parameters": [
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        },
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        },
        {
          "name": "f3",
          "type": "(a: R2) => R3",
          "optional": false
        },
        {
          "name": "f4",
          "type": "(a: R3) => R4",
          "optional": false
        },
        {
          "name": "f5",
          "type": "(a: R4) => R5",
          "optional": false
        },
        {
          "name": "f6",
          "type": "(a: R5) => R6",
          "optional": false
        },
        {
          "name": "f7",
          "type": "(a: R6) => R7",
          "optional": false
        },
        {
          "name": "func",
          "type": "Array<Many<(a: any) => any>>",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "flow",
      "parameters": [
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        },
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        },
        {
          "name": "f3",
          "type": "(a: R2) => R3",
          "optional": false
        },
        {
          "name": "f4",
          "type": "(a: R3) => R4",
          "optional": false
        },
        {
          "name": "f5",
          "type": "(a: R4) => R5",
          "optional": false
        },
        {
          "name": "f6",
          "type": "(a: R5) => R6",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => R6",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "flow",
      "parameters": [
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        },
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        },
        {
          "name": "f3",
          "type": "(a: R2) => R3",
          "optional": false
        },
        {
          "name": "f4",
          "type": "(a: R3) => R4",
          "optional": false
        },
        {
          "name": "f5",
          "type": "(a: R4) => R5",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => R5",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "flow",
      "parameters": [
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        },
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        },
        {
          "name": "f3",
          "type": "(a: R2) => R3",
          "optional": false
        },
        {
          "name": "f4",
          "type": "(a: R3) => R4",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => R4",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "flow",
      "parameters": [
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        },
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        },
        {
          "name": "f3",
          "type": "(a: R2) => R3",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => R3",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "flow",
      "parameters": [
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        },
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => R2",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "flow",
      "parameters": [
        {
          "name": "func",
          "type": "Array<Many<(...args: any[]) => any>>",
          "optional": false
        }
      ],
      "returnType": "(...args: any[]) => any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "flowRight",
      "parameters": [
        {
          "name": "f7",
          "type": "(a: R6) => R7",
          "optional": false
        },
        {
          "name": "f6",
          "type": "(a: R5) => R6",
          "optional": false
        },
        {
          "name": "f5",
          "type": "(a: R4) => R5",
          "optional": false
        },
        {
          "name": "f4",
          "type": "(a: R3) => R4",
          "optional": false
        },
        {
          "name": "f3",
          "type": "(a: R2) => R3",
          "optional": false
        },
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        },
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => R7",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flowRight",
      "parameters": [
        {
          "name": "f6",
          "type": "(a: R5) => R6",
          "optional": false
        },
        {
          "name": "f5",
          "type": "(a: R4) => R5",
          "optional": false
        },
        {
          "name": "f4",
          "type": "(a: R3) => R4",
          "optional": false
        },
        {
          "name": "f3",
          "type": "(a: R2) => R3",
          "optional": false
        },
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        },
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => R6",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flowRight",
      "parameters": [
        {
          "name": "f5",
          "type": "(a: R4) => R5",
          "optional": false
        },
        {
          "name": "f4",
          "type": "(a: R3) => R4",
          "optional": false
        },
        {
          "name": "f3",
          "type": "(a: R2) => R3",
          "optional": false
        },
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        },
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => R5",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flowRight",
      "parameters": [
        {
          "name": "f4",
          "type": "(a: R3) => R4",
          "optional": false
        },
        {
          "name": "f3",
          "type": "(a: R2) => R3",
          "optional": false
        },
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        },
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => R4",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flowRight",
      "parameters": [
        {
          "name": "f3",
          "type": "(a: R2) => R3",
          "optional": false
        },
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        },
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => R3",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flowRight",
      "parameters": [
        {
          "name": "f2",
          "type": "(a: R1) => R2",
          "optional": false
        },
        {
          "name": "f1",
          "type": "(...args: A) => R1",
          "optional": false
        }
      ],
      "returnType": "(...args: A) => R2",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "flowRight",
      "parameters": [
        {
          "name": "func",
          "type": "Array<Many<(...args: any[]) => any>>",
          "optional": false
        }
      ],
      "returnType": "(...args: any[]) => any",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "identity",
      "parameters": [
        {
          "name": "value",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "T",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "identity",
      "parameters": [],
      "returnType": "undefined",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "iteratee",
      "parameters": [
        {
          "name": "func",
          "type": "TFunction",
          "optional": false
        }
      ],
      "returnType": "TFunction",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "iteratee",
      "parameters": [
        {
          "name": "func",
          "type": "symbol | number | string | object",
          "optional": false
        }
      ],
      "returnType": "(...args: any[]) => any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "matches",
      "parameters": [
        {
          "name": "source",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "(value: any) => boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "matches",
      "parameters": [
        {
          "name": "source",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "(value: V) => boolean",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "matchesProperty",
      "parameters": [
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "srcValue",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "(value: any) => boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "matchesProperty",
      "parameters": [
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "srcValue",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "(value: V) => boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "method",
      "parameters": [
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        },
        {
          "name": "args",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "(object: any) => any",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "methodOf",
      "parameters": [
        {
          "name": "object",
          "type": "object",
          "optional": false
        },
        {
          "name": "args",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "(path: PropertyPath) => any",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "mixin",
      "parameters": [
        {
          "name": "object",
          "type": "TObject",
          "optional": false
        },
        {
          "name": "source",
          "type": "Dictionary<(...args: any[]) => any>",
          "optional": false
        },
        {
          "name": "options",
          "type": "MixinOptions",
          "optional": true
        }
      ],
      "returnType": "TObject",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "mixin",
      "parameters": [
        {
          "name": "source",
          "type": "Dictionary<(...args: any[]) => any>",
          "optional": false
        },
        {
          "name": "options",
          "type": "MixinOptions",
          "optional": true
        }
      ],
      "returnType": "LoDashStatic",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "noConflict",
      "parameters": [],
      "returnType": "typeof _",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "noop",
      "parameters": [
        {
          "name": "args",
          "type": "any[]",
          "optional": false
        }
      ],
      "returnType": "void",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "nthArg",
      "parameters": [
        {
          "name": "n",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "(...args: any[]) => any",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "over",
      "parameters": [
        {
          "name": "iteratees",
          "type": "Array<Many<(...args: any[]) => TResult>>",
          "optional": false
        }
      ],
      "returnType": "(...args: any[]) => TResult[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "overEvery",
      "parameters": [
        {
          "name": "predicates",
          "type": "[\n            (arg: T) => arg is Result1,\n            (arg: T) => arg is Result2\n        ]",
          "optional": false
        }
      ],
      "returnType": "(arg: T) => arg is Result1 & Result2",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "overEvery",
      "parameters": [
        {
          "name": "predicates",
          "type": "Array<Many<(...args: T[]) => boolean>>",
          "optional": false
        }
      ],
      "returnType": "(...args: T[]) => boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "overSome",
      "parameters": [
        {
          "name": "predicates",
          "type": "[\n            (arg: T) => arg is Result1,\n            (arg: T) => arg is Result2\n        ]",
          "optional": false
        }
      ],
      "returnType": "(arg: T) => arg is Result1 | Result2",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "overSome",
      "parameters": [
        {
          "name": "predicates",
          "type": "Array<Many<(...args: T[]) => boolean>>",
          "optional": false
        }
      ],
      "returnType": "(...args: T[]) => boolean",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "property",
      "parameters": [
        {
          "name": "path",
          "type": "PropertyPath",
          "optional": false
        }
      ],
      "returnType": "(obj: TObj) => TResult",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "propertyOf",
      "parameters": [
        {
          "name": "object",
          "type": "T",
          "optional": false
        }
      ],
      "returnType": "(path: PropertyPath) => any",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "range",
      "parameters": [
        {
          "name": "start",
          "type": "number",
          "optional": false
        },
        {
          "name": "end",
          "type": "number",
          "optional": true
        },
        {
          "name": "step",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "number[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "range",
      "parameters": [
        {
          "name": "end",
          "type": "number",
          "optional": false
        },
        {
          "name": "index",
          "type": "string | number",
          "optional": false
        },
        {
          "name": "guard",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "number[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "rangeRight",
      "parameters": [
        {
          "name": "start",
          "type": "number",
          "optional": false
        },
        {
          "name": "end",
          "type": "number",
          "optional": true
        },
        {
          "name": "step",
          "type": "number",
          "optional": true
        }
      ],
      "returnType": "number[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "rangeRight",
      "parameters": [
        {
          "name": "end",
          "type": "number",
          "optional": false
        },
        {
          "name": "index",
          "type": "string | number",
          "optional": false
        },
        {
          "name": "guard",
          "type": "object",
          "optional": false
        }
      ],
      "returnType": "number[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "runInContext",
      "parameters": [
        {
          "name": "context",
          "type": "object",
          "optional": true
        }
      ],
      "returnType": "LoDashStatic",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "stubArray",
      "parameters": [],
      "returnType": "any[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "stubFalse",
      "parameters": [],
      "returnType": "false",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "stubObject",
      "parameters": [],
      "returnType": "any",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "stubString",
      "parameters": [],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "stubTrue",
      "parameters": [],
      "returnType": "true",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "times",
      "parameters": [
        {
          "name": "n",
          "type": "number",
          "optional": false
        },
        {
          "name": "iteratee",
          "type": "(num: number) => TResult",
          "optional": false
        }
      ],
      "returnType": "TResult[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "times",
      "parameters": [
        {
          "name": "n",
          "type": "number",
          "optional": false
        }
      ],
      "returnType": "number[]",
      "isExported": true,
      "description": "source npm package"
    },
    {
      "name": "toPath",
      "parameters": [
        {
          "name": "value",
          "type": "any",
          "optional": false
        }
      ],
      "returnType": "string[]",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "uniqueId",
      "parameters": [
        {
          "name": "prefix",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "string",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "stubTrue",
      "parameters": [],
      "returnType": "true",
      "isExported": true,
      "description": "No description found"
    },
    {
      "name": "stubFalse",
      "parameters": [],
      "returnType": "false",
      "isExported": true,
      "description": "No description found"
    }
  ]
}