{
  "version": "29.7.0",
  "functions": [
    {
      "name": "createTestScheduler",
      "parameters": [
        {
          "name": "globalConfig",
          "type": "GlobalConfig",
          "optional": false
        },
        {
          "name": "context",
          "type": "TestSchedulerContext",
          "optional": false
        }
      ],
      "returnType": "Promise<TestScheduler>",
      "jsdoc": null,
      "xaiDescription": "Creates a test scheduler using global config and context. Returns a Promise<TestScheduler>."
    },
    {
      "name": "getVersion",
      "parameters": [],
      "returnType": "string",
      "jsdoc": null,
      "xaiDescription": "Retrieves the current version of the tool. Returns a string."
    },
    {
      "name": "run",
      "parameters": [
        {
          "name": "maybeArgv",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "project",
          "type": "string",
          "optional": true
        }
      ],
      "returnType": "Promise<void>",
      "jsdoc": null,
      "xaiDescription": "Runs the tool with optional arguments and project. Returns a Promise<void>."
    },
    {
      "name": "runCLI",
      "parameters": [
        {
          "name": "argv",
          "type": "Argv",
          "optional": false
        },
        {
          "name": "projects",
          "type": "string[]",
          "optional": false
        }
      ],
      "returnType": "Promise<{ results: AggregatedResult; globalConfig: GlobalConfig; }>",
      "jsdoc": null,
      "xaiDescription": "Runs the CLI with arguments and projects. Returns a Promise with results and global config."
    }
  ],
  "enums": [],
  "types": [
    {
      "name": "Config",
      "type": "Partial<{ automock: boolean; bail: number | boolean; cache: boolean; cacheDirectory: string; ci: boolean; clearMocks: boolean; changedFilesWithAncestor: boolean; changedSince: string; collectCoverage: boolean; ... 93 more ...; workerThreads: boolean; }>",
      "properties": [
        {
          "name": "automock",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "bail",
          "type": "number | boolean",
          "optional": true
        },
        {
          "name": "cache",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "cacheDirectory",
          "type": "string",
          "optional": true
        },
        {
          "name": "ci",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "clearMocks",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "changedFilesWithAncestor",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "changedSince",
          "type": "string",
          "optional": true
        },
        {
          "name": "collectCoverage",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "collectCoverageFrom",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "coverageDirectory",
          "type": "string",
          "optional": true
        },
        {
          "name": "coveragePathIgnorePatterns",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "coverageProvider",
          "type": "CoverageProvider",
          "optional": true
        },
        {
          "name": "coverageReporters",
          "type": "CoverageReporters",
          "optional": true
        },
        {
          "name": "coverageThreshold",
          "type": "CoverageThreshold",
          "optional": true
        },
        {
          "name": "dependencyExtractor",
          "type": "string",
          "optional": true
        },
        {
          "name": "detectLeaks",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "detectOpenHandles",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "displayName",
          "type": "string | DisplayName",
          "optional": true
        },
        {
          "name": "expand",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "extensionsToTreatAsEsm",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "fakeTimers",
          "type": "FakeTimers",
          "optional": true
        },
        {
          "name": "filter",
          "type": "string",
          "optional": true
        },
        {
          "name": "findRelatedTests",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "forceCoverageMatch",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "forceExit",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "json",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "globals",
          "type": "ConfigGlobals",
          "optional": true
        },
        {
          "name": "globalSetup",
          "type": "string",
          "optional": true
        },
        {
          "name": "globalTeardown",
          "type": "string",
          "optional": true
        },
        {
          "name": "haste",
          "type": "HasteConfig",
          "optional": true
        },
        {
          "name": "id",
          "type": "string",
          "optional": true
        },
        {
          "name": "injectGlobals",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "reporters",
          "type": "(string | ReporterConfig)[]",
          "optional": true
        },
        {
          "name": "logHeapUsage",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "lastCommit",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "listTests",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "maxConcurrency",
          "type": "number",
          "optional": true
        },
        {
          "name": "maxWorkers",
          "type": "string | number",
          "optional": true
        },
        {
          "name": "moduleDirectories",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "moduleFileExtensions",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "moduleNameMapper",
          "type": "{ [key: string]: string | string[]; }",
          "optional": true
        },
        {
          "name": "modulePathIgnorePatterns",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "modulePaths",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "noStackTrace",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "notify",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "notifyMode",
          "type": "string",
          "optional": true
        },
        {
          "name": "onlyChanged",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "onlyFailures",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "openHandlesTimeout",
          "type": "number",
          "optional": true
        },
        {
          "name": "outputFile",
          "type": "string",
          "optional": true
        },
        {
          "name": "passWithNoTests",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "preset",
          "type": "string",
          "optional": true
        },
        {
          "name": "prettierPath",
          "type": "string",
          "optional": true
        },
        {
          "name": "projects",
          "type": "(string | InitialProjectOptions)[]",
          "optional": true
        },
        {
          "name": "randomize",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "replname",
          "type": "string",
          "optional": true
        },
        {
          "name": "resetMocks",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "resetModules",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "resolver",
          "type": "string",
          "optional": true
        },
        {
          "name": "restoreMocks",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "rootDir",
          "type": "string",
          "optional": true
        },
        {
          "name": "roots",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "runner",
          "type": "string",
          "optional": true
        },
        {
          "name": "runTestsByPath",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "runtime",
          "type": "string",
          "optional": true
        },
        {
          "name": "sandboxInjectedGlobals",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "setupFiles",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "setupFilesAfterEnv",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "showSeed",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "silent",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "skipFilter",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "skipNodeResolution",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "slowTestThreshold",
          "type": "number",
          "optional": true
        },
        {
          "name": "snapshotResolver",
          "type": "string",
          "optional": true
        },
        {
          "name": "snapshotSerializers",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "snapshotFormat",
          "type": "{ readonly callToJSON?: boolean; readonly compareKeys?: null; readonly escapeRegex?: boolean; readonly escapeString?: boolean; readonly highlight?: boolean; readonly indent?: number; readonly maxDepth?: number; ... 4 more ...; readonly theme?: { ...; }; }",
          "optional": true
        },
        {
          "name": "errorOnDeprecated",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "testEnvironment",
          "type": "string",
          "optional": true
        },
        {
          "name": "testEnvironmentOptions",
          "type": "Record<string, unknown>",
          "optional": true
        },
        {
          "name": "testFailureExitCode",
          "type": "string | number",
          "optional": true
        },
        {
          "name": "testLocationInResults",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "testMatch",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "testNamePattern",
          "type": "string",
          "optional": true
        },
        {
          "name": "testPathIgnorePatterns",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "testRegex",
          "type": "string | string[]",
          "optional": true
        },
        {
          "name": "testResultsProcessor",
          "type": "string",
          "optional": true
        },
        {
          "name": "testRunner",
          "type": "string",
          "optional": true
        },
        {
          "name": "testSequencer",
          "type": "string",
          "optional": true
        },
        {
          "name": "testTimeout",
          "type": "number",
          "optional": true
        },
        {
          "name": "transform",
          "type": "{ [regex: string]: string | TransformerConfig; }",
          "optional": true
        },
        {
          "name": "transformIgnorePatterns",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "watchPathIgnorePatterns",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "unmockedModulePathPatterns",
          "type": "string[]",
          "optional": true
        },
        {
          "name": "updateSnapshot",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "useStderr",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "verbose",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "watch",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "watchAll",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "watchman",
          "type": "boolean",
          "optional": true
        },
        {
          "name": "watchPlugins",
          "type": "(string | [string, Record<string, unknown>])[]",
          "optional": true
        },
        {
          "name": "workerIdleMemoryLimit",
          "type": "string | number",
          "optional": true
        },
        {
          "name": "workerThreads",
          "type": "boolean",
          "optional": true
        }
      ],
      "extends": [],
      "jsdoc": null,
      "isExported": false,
      "xaiDescription": "Partial configuration object with various test-related settings."
    }
  ],
  "classes": [],
  "constants": [],
  "namespaces": [
    {
      "name": "jest",
      "contents": {
        "functions": [
          {
            "name": "createTestScheduler",
            "parameters": [
              {
                "name": "globalConfig",
                "type": "GlobalConfig",
                "optional": false
              },
              {
                "name": "context",
                "type": "TestSchedulerContext",
                "optional": false
              }
            ],
            "returnType": "Promise<TestScheduler>",
            "jsdoc": null,
            "xaiDescription": "Creates a test scheduler using global config and context. Returns a Promise<TestScheduler>."
          },
          {
            "name": "getVersion",
            "parameters": [],
            "returnType": "string",
            "jsdoc": null,
            "xaiDescription": "Retrieves the current version of the tool. Returns a string."
          },
          {
            "name": "run",
            "parameters": [
              {
                "name": "maybeArgv",
                "type": "string[]",
                "optional": true
              },
              {
                "name": "project",
                "type": "string",
                "optional": true
              }
            ],
            "returnType": "Promise<void>",
            "jsdoc": null,
            "xaiDescription": "Runs the tool with optional arguments and project. Returns a Promise<void>."
          },
          {
            "name": "runCLI",
            "parameters": [
              {
                "name": "argv",
                "type": "Argv",
                "optional": false
              },
              {
                "name": "projects",
                "type": "string[]",
                "optional": false
              }
            ],
            "returnType": "Promise<{ results: AggregatedResult; globalConfig: GlobalConfig; }>",
            "jsdoc": null,
            "xaiDescription": "Runs the CLI with arguments and projects. Returns a Promise with results and global config."
          }
        ],
        "enums": [],
        "types": [],
        "classes": [],
        "constants": []
      },
      "jsdoc": null,
      "isExported": true
    }
  ]
}